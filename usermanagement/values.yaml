# Default values for usermanagement.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
name: usermanagement

env:
  postgres_user: postgres
  postgres_password: Otsi@123
  postgres_data: /var/lib/postgresql/data/pgdata
  postgres_db: UserManagement

replicas: 1
replicasPos: 1

namespace: 
  name: default
image:
  repository: 604430719928.dkr.ecr.ap-south-1.amazonaws.com/usermanagement
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  postgres: 
    repository: postgres 
    tag: latest


nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 8084
  postgres: 
    type: NodePort
    port: 5432

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 100m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 100Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  # requests:
  #   cpu: 100m

hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80


nodeSelector: {}

tolerations: []

affinity: {}

persistence: 
  enabled: true
  storageClass: gp2
  accessMode: ReadWriteOnce
  size: 13Gi

volumeMounts: 
  mountPath: /target/newrelic/